plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'idea'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.1.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'com.querydsl') {
            if (details.requested.name == 'querydsl-jpa') {
                // jpa는 jakarta 분류가 필요
                details.useTarget('com.querydsl:querydsl-jpa:5.1.0:jakarta')
            } else {
                details.useVersion('5.1.0')
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}
idea {
    module {
        generatedSourceDirs += file('build/generated/sources/annotationProcessor/java/main')
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
